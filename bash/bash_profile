# put homebrew first in path
export PATH=/usr/local/bin:$PATH

# add user bin to path
export PATH="${HOME}"/bin:$PATH

# eternal instant history (without duplicates)
# eternal history from (http://superuser.com/questions/575479/bash-history-truncated-to-500-lines-on-each-login)
# sync and duplicate handling from (https://unix.stackexchange.com/a/18443)
HISTFILE="/Users/${USER}/.bash_eternal_history"
HISTSIZE=
HISTFILESIZE=
HISTCONTROL=ignoredups:erasedups
shopt -s histappend
PROMPT_COMMAND="history -n; history -w; history -c; history -r; $PROMPT_COMMAND"

# load bash aliases
[[ -f ~/.bash_aliases ]] && source ~/.bash_aliases

# load secret env variables!
[[ -f ~/.env ]] && source ~/.env

# add user bin to path
export PATH=~/bin:$PATH

# homebrew bash completion
[[ -f `brew --prefix`/etc/bash_completion ]] && . `brew --prefix`/etc/bash_completion

# make libssl visible to pkg-config
export PKG_CONFIG_PATH="/usr/local/opt/openssl@1.1/lib/pkgconfig"

# hacky watch script for triggering tasks when files change
# example:
#   $ watch "app spec" "bundle exec rake"
function watch {
  lastsum=""

  while [[ true ]]
  do
    cursum=`find $1 -type f -exec md5 {} \;`
    if [[ $lastsum != $cursum ]] ; then
      eval $2
      lastsum=$cursum
    fi
    sleep 2
  done
}

# load additional configs
for f in ~/.bash_profile.d/*.sh ; do
  source $f
done

# override `cd` to run hooks in current directory (if applicable)
function cd {
  builtin cd "$@" || return
  [[ -f .cd_hook ]] && . .cd_hook || return
}
[[ -f .cd_hook ]] && . .cd_hook

# set prompt
[[ -f ~/.bash_prompt ]] && . ~/.bash_prompt

# finally, display welcome banner
header
